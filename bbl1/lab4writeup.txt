LING567 Lab 4
Andrew Briand and Libbey Brown

Question 1:

The results for the test corpus that were run at the end of Lab 3 is repeated below:
	1. How many items parsed? 151 out of 999
        2. Average parses per item? 25.43
        3. Parses for the most ambiguous item? 496
        4. We continue to see ambiguity due to coordination being allowed between practically any two constituents 
	without clitics or conjunctions, and having multiple lexical rules with the same function and morphological 
	form that are applied to a single word to produce multiple trees.

The results for our Lab 4 testsuite using the Lab 3 grammar:
	1. How many items parsed? 22 out of 90 
	2. Average parses per item? 3.86
	3. Parses for the most ambiguous item? 28
	4. As noted for the general corpus, the ambiguity is due to coordination allowed between any two constituents
	and multiple lexical rules and/or lexical entries that generate the same word.

The results for our test corpus, run with our Lab 4 grammar:
	1. How many items parsed? 144 out of 999
	2. Average parses per item? 35.42
	3. Parses for the most ambiguous item? 726!
	4. Coordination continues to be a significant source of ambiguity - for our item with 726 parses, literally
	every tree had coordiation.  Looking through the parses, any item with more than about 4 parses has ambiguity
	due to coordination.

The results for our testsuite, run with our Lab 4 grammar:
	1. How many items parsed? 24 out of 90
	2. Average parses per item? 6.21
	3. Parses for the most ambiguous item? 44
	4. Coordination continues to be the most problematic issue with ambiguity. 
	

Question 2-3:

This week, we added the following three phenomena to our testsuite:
	Posession
	Wh-questions
	Embedded clauses

We modified the choices file for the following three phenomena:
	Posession
	Wh-questions
	Tense/aspect

Possession:

There are two possession strategies in Tsova-Tush. In the first, a genitive noun is placed next to another noun in any case. The genitive
 noun is the possessor and the other noun is the possessum. For example:

beⁿ  ħac'uk'-e             -n   c'a   d       -a
nest bird.SG-thematic.vowel-GEN house CM(F.pl)-be
A nest is a bird's house.

From the documentation we have, it was not clear to us whether the possessor can be placed on either side of the possessum, but the 
examples in the corpus we found all place the possessor after the possessum.

The second strategy is used for personal pronouns. Each personal pronoun has two possessive forms. The first is identical to the 
genitive form of that pronoun (for example 'seⁿ' in the first person singular) and is used with possessums that are in the absolutive 
case. The second is the first with the nasalization of the final vowel removed (for example 'se' in the first person singular) and is 
used with possessums in all other cases. Consider the following example in which 'seⁿ' is used as the possessor of an absolutive noun 
and 'oqui' is used as the possessor of an noun in the contact case:

seⁿ mač'ar ɣazix  xiɬ     oqui         mač'ar-ex
my  wine   better be.pfv  3sg.poss.obl wine  -co
'My wine will be better than their (sg) wine.' 

In this strategy, the possessor precedes the possessum.

To test these possession strategies, we introduced both positive and negative examples with many of the personal possessive pronouns 
with possessums in the absolutive and ergative cases to ensure that case agreement was obeyed. For example, in the 2nd person plural 
with an absolutive possessum:

# Possessive pronouns: Case agreement
Source: author
Vetted: f
Judgment: g
Phenomena: Adnominal Possession
šuⁿ      k'uit' d      -arst'      -e
2pl.POSS cat    cm(d/d)-gain.weight-prs
Your (PL) cat is gaining weight

# Possessive pronouns: Case agreement
Source: author
Vetted: f
Judgment: u
Phenomena: Adnominal Possession
šu           k'uit'  d      -arst'      -e
2pl.POSS.OBL cat     cm(d/d)-gain.weight-prs
Your (PL) cat is gaining weight

And in the first person singular with an ergative possessum:

# Possessive pronouns: Case agreement
Source: author
Vetted: f
Judgment: g
Phenomena: Adnominal Possession
se           bader-i -v   ʡok'                  -i  y      -aq'-o
1sg.POSS.OBL child-PL-ERG crescent.shaped.pastry-PL cm(y/y)-eat-IMPF
My children are eating pancakes

# Possessive pronouns: Case agreement
Source: author
Vetted: f
Judgment: u
Phenomena: Adnominal Possession
seⁿ      bader-i -v   ʡok'                  -i  y      -aq'-o
1sg.POSS child-PL-ERG crescent.shaped.pastry-PL cm(y/y)-eat-IMPF
My children are eating pancakes

We also introduced a negative example where the possessor was placed after the possessum:

# Possessive pronouns: Pronoun precedes possessum
Source: author
Vetted: f
Judgment: u
Phenomena: Adnominal Possession
k'uit' oquiⁿ    d      -arst'      -e
cat    3sg.POSS cm(d/d)-gain.weight-prs
Their (sg) cat is gaining weight

To test the second second possession strategy, we added the following positive example:

# Adnominal possession: Genitive
Source: corpus
Vetted: s
Judgment: g
Phenomena: Adnominal Possession
beⁿ  ħac'uk'-e             -n   c'a   d       -a
nest bird.SG-thematic.vowel-GEN house CM(F.pl)-be
A nest is a bird's house.

We added the following negative example in which the possessor is not marked for the genitive case:

# Adnominal possession: Possessor is genitive
Source: author
Vetted: f
Judgment: u
Phenomena: Adnominal Possession
beⁿ  ħac'uk' c'a   d       -a
nest bird.SG house CM(F.pl)-be
A nest is a bird's house.

In order to handle Tsova-Tush's personal pronouns, we added a class of possessor pronouns. We added two forms to this class for each of 
the person and number combinations in the following form:

poss-pron1_instance1_name=1SG-POSS-ABS
    poss-pron1_instance1_orth=seⁿ
      poss-pron1_instance1_feat1_name=number
      poss-pron1_instance1_feat1_value=sg
      poss-pron1_instance1_feat2_name=person
      poss-pron1_instance1_feat2_value=1st
      poss-pron1_instance1_non-png-feat1_name=case
      poss-pron1_instance1_non-png-feat1_value=abs
    poss-pron1_instance2_name=1SG-POSS-OBL
    poss-pron1_instance2_orth=se
      poss-pron1_instance2_feat1_name=number
      poss-pron1_instance2_feat1_value=sg
      poss-pron1_instance2_feat2_name=person
      poss-pron1_instance2_feat2_value=1st
      poss-pron1_instance2_non-png-feat1_name=case
      poss-pron1_instance2_non-png-feat1_value=erg, gen, dat, all, con, instr, adverbial, ill, dir, loc, all-loc, ill-loc

That is, one instance labeled with "-ABS" for the form of the pronoun taking an absolutive possessum, and one instance labeled with 
"-OBL" for the form of the pronoun taking a possessum in any other case. Handling oblique forms of these pronouns by listing out every 
case besides abs in the case feature led to an error which we posted about on canvas. Elizabeth kindly suggested we fix this issue by 
adding a 'non-abs' feature into our bbl.tdl file. We did this as follows:

case := *top*.
real-case := case.  ; intermediate case type for all real cases
erg := real-case & non-abs.  ; erg
abs := real-case.  ; abs
gen := real-case & gen+dat & non-abs.  ; gen
dat := real-case & gen+dat & non-abs.  ; dat
all := real-case & non-abs.  ; all
con := real-case & non-abs.  ; con
instr := real-case & non-abs.  ; instr
adverbial := real-case & non-abs.  ; adverbial
ill := real-case & non-abs.  ; ill
dir := real-case & non-abs.  ; dir
loc := real-case & non-abs.  ; loc
all-loc := real-case & non-abs.  ; all-loc
ill-loc := real-case & non-abs.  ; ill-loc
gen+dat := case.
non-abs := case.

That is, we created a case 'non-abs' that all cases besides the absolutive inherit from.

We were able to implement the genitive possession construction by simply adding a strategy with no possessive marking that required the 
possessor to be in the genitive case. Previously, we had specified that all nouns in the noun type 'noun1' were absolutive. This 
prevented these nouns from taking the genitive suffixes necessary for possession to be parsed correctly. Now, we instead do not specify 
the case of these nouns and added a lexical rule type that makes a noun absolutive without an affix:

    noun-pc9_lrt10_name=absolutive
      noun-pc9_lrt10_feat1_name=case
      noun-pc9_lrt10_feat1_value=abs
      noun-pc9_lrt10_feat1_head=itself
      noun-pc9_lrt10_lri1_inflecting=no

We also renamed noun position class noun-pc9 to 'Case' for clarity, though we have not yet consolidated all case affixes into this 
position class.

Tense/Aspect:
The following information about tense/aspect is repeated from the previous lab:

Tense and aspect fall into three groups in Tsova-Tush: present, future, and aorist.  The present group
is based on the imperfective stem of the verb, the future group is based on the perfective stem of the verb,
and the aorist is based on both the perfective and the imperfective stems.  Our literature summarizes the tense/aspect
groups as follows:

-Present group: present, imperfect
-Future group: future, future imperfect
-Aorist group: imperfective aorist, perfective aorist, imperfective perfect, perfective perfict

Tsova-Tush has optional evidentiality markers that combine with verbs to identify information obtained through
second-hand sources.  These markers can be left unspecified.  There is one form of evidentiality that combines
with the future and present tenses, and a different form that combines with the aorist group.

Our literature provided a table with conjuguations for the various tense/aspect combinations we found
helpful in understanding the different meanings, based on the verb cut, taking a third person subject.  A
sentence with the following verb was found in our test corpus, and from that sentence and the conjugations
in the table we extrapolated examples of the different tense/aspect/evidentiality combinations.

The sentence from our corpus:
	oqus tit'-en xen
	yon.one cut(aorist perfective)-aorist tree
	(S)he did cut the tree

Paradigm of the verb "cut" from the literature:

Present group, based on the imperfect stem of the verb 'cut', tet'ar:
	Present tense, aspect unspecified: tet'-o (s/he) cuts, is cutting
	Present tense, imperfect aspect: tet'-ora (s/he) used to cut
	Present tense, imperfect aspect, evidentiality reported: tet'-ralʷ (s/he) evidently cuts

Future group, based on the perfect stem of the verb 'cut', tit'ar:
	Future tense, aspect unspecified: tit'-o (s/he) will cut
	Future tense, imperfect aspect: tit'-ora (s/he) will cut (multiple times)
	Future tense, imperfect aspect, evidentiality reported: tit'-ralʷ (s/he) evidently will cut

Aorist imperfective group, based on the imperfect stem tet'ar:
	Aorist tense: tet'-in (s/he) cut, did cut (multiple times)
	Aorist tense, perfect aspect: tet'-ir (s/he) had cut (multiple times)
	Aorist tense, evidentiality reported: tet'-ino (s/he) evidently cut, did cut (multiple times)
	Aorist tense, perfect aspect, evidentiality reported: tet'-nor (s/he) evidently had cut (multiple times)

Aorist perfective group, based on the perfect stem tit'ar:
	Aorist tense: tit'-en (s/he) cut, did cut
	Aorist tense, perfect aspect: tit'-er (s/he) had cut
	Aorist tense, evidentiality reported: tit'-eno (s/he) evidently cut, did cut
	Aorist tense, perfect aspect, evidentiality reported: tit'-nor (s/he) evidently had cut

There are still some questions we need to resolve regarding tense/aspect.  We have reached out the the linguist in
hopes she will give us some guidance.

Test sentences have been added to our test suite representative of each tense/aspect/evidentiality combination. 
For example, the following were added for the present group, for present, imperfect, and imperfect reported:

# 47: Tense/aspect: Present group
Source: author
Vetted: f
Judgment: g
Phenomena: tense/aspect
oqus tet'-o xen
yon.one cut(present)-present tree
(S)he cuts the tree / (S)he is cutting the tree

# 48: Tense/aspect: Present group
Source: author
Vetted: f
Judgment: g
Phenomena: tense/aspect
oqus tet'-ora xen
yon.one cut(present)-imperfect tree
(S)he used to cut the tree 

# 49: Tense/aspect: Present group
Source: author
Vetted: f
Judgment: g
Phenomena: tense/aspect
oqus tet'-ralʷ xen
yon.one cut(present)-imperfect.reported tree
(S)he evidently used to cut the tree 

Our grammar did not have any features in the tense category, so we created a tense category with the features present,
future, and aorist.

Initially our grammar had four entries for aspect - pfv, ipfv, cont, and comp.  Based on a review of the affixes in our corpus
and a comparison with the literature, we deleted the aspects cont and comp as they were able to be merged into the pfv ipfv aspects.
We added an evidentiality feature "reported" based on the information provided in the literature.

section=tense-aspect-mood
tense-definition=build
  tense1_name=aorist
    tense1_supertype1_name=tense
  tense2_name=future
    tense2_supertype1_name=tense
  tense3_name=present
    tense3_supertype1_name=tense
  aspect3_name=pfv
    aspect3_supertype3_name=aspect
  aspect4_name=ipfv
    aspect4_supertype4_name=aspect

section=evidentials
evidential-definition=choose
reported=on

We created two new verb types, one based on the perfective stem and one based on the imperfective stem, per the information provided
in our literature.  These new verb types are both transitive and have the argument structure we had previously decided to use for transitive
verbs.  We intend to create lexical entries in the correct verb type for other verbs in our corpus, but this will take some time, as we will need
to review the corpus to determine what spellings belong in which group.  As of now we are limiting this to the verbs we are using in our testsuite 
sentences.  Created new lexical entries for the verb "to cut" in the different categories.  Deleted pre-exisiting entries for the verb "to cut"
which were listed in other verb categories.  We have already created some verb types with specific argument structures so we made sure those verbs 
were listed as inputs to the appropriate new position class.
	
verb190_name=trans_imperfective
    verb190_feat1_name=case
    verb190_feat1_value=erg
    verb190_feat1_head=subj
    verb190_feat2_name=case
    verb190_feat2_value=abs
    verb190_feat2_head=obj
  verb190_valence=erg-abs
    verb190_stem1_orth=tet'
    verb190_stem1_pred=_cut_v_rel
  verb191_name=trans_perfective
    verb191_feat1_name=case
    verb191_feat1_value=erg
    verb191_feat1_head=subj
    verb191_feat2_name=case
    verb191_feat2_value=abs
    verb191_feat2_head=obj
  verb191_valence=erg-abs
    verb191_stem1_orth=tit'
    verb191_stem1_pred=_cut_v_rel

We added two new position classes, one which takes as input the perfective stem and one which takes as input the imperfective stem, that add the 
necessary affixes for tense and aspect.

  verb-pc80_name=impf_stems
  verb-pc80_obligatory=on
  verb-pc80_order=suffix
  verb-pc80_inputs=verb181, verb182, verb183, verb189, verb190
    verb-pc80_lrt1_name=present_tense
      verb-pc80_lrt1_feat1_name=tense
      verb-pc80_lrt1_feat1_value=present
      verb-pc80_lrt1_feat1_head=verb
      verb-pc80_lrt1_lri1_inflecting=yes
      verb-pc80_lrt1_lri1_orth=-ʷ
      verb-pc80_lrt1_lri3_inflecting=yes
      verb-pc80_lrt1_lri3_orth=-o
      verb-pc80_lrt1_lri4_inflecting=yes
      verb-pc80_lrt1_lri4_orth=-e
    verb-pc80_lrt2_name=present_ipf
      verb-pc80_lrt2_feat1_name=tense
      verb-pc80_lrt2_feat1_value=present
      verb-pc80_lrt2_feat1_head=verb
      verb-pc80_lrt2_feat2_name=aspect
      verb-pc80_lrt2_feat2_value=ipfv
      verb-pc80_lrt2_feat2_head=verb
      verb-pc80_lrt2_lri1_inflecting=yes
      verb-pc80_lrt2_lri1_orth=-or
      verb-pc80_lrt2_lri2_inflecting=yes
      verb-pc80_lrt2_lri2_orth=-ora
    verb-pc80_lrt3_name=pres_ipf_reported
      verb-pc80_lrt3_feat1_name=tense
      verb-pc80_lrt3_feat1_value=present
      verb-pc80_lrt3_feat1_head=verb
      verb-pc80_lrt3_feat2_name=aspect
      verb-pc80_lrt3_feat2_value=ipfv
      verb-pc80_lrt3_feat2_head=verb
      verb-pc80_lrt3_feat3_name=evidential
      verb-pc80_lrt3_feat3_value=reported
      verb-pc80_lrt3_feat3_head=verb
      verb-pc80_lrt3_lri1_inflecting=yes
      verb-pc80_lrt3_lri1_orth=-ralʷ
    verb-pc80_lrt4_name=aorist
      verb-pc80_lrt4_feat1_name=tense
      verb-pc80_lrt4_feat1_value=aorist
      verb-pc80_lrt4_feat1_head=verb
      verb-pc80_lrt4_lri1_inflecting=yes
      verb-pc80_lrt4_lri1_orth=-in
    verb-pc80_lrt5_name=aorist_perfect
      verb-pc80_lrt5_feat1_name=tense
      verb-pc80_lrt5_feat1_value=aorist
      verb-pc80_lrt5_feat1_head=verb
      verb-pc80_lrt5_feat2_name=aspect
      verb-pc80_lrt5_feat2_value=pfv
      verb-pc80_lrt5_feat2_head=verb
      verb-pc80_lrt5_lri1_inflecting=yes
      verb-pc80_lrt5_lri1_orth=-ir
    verb-pc80_lrt6_name=aorist_reported
      verb-pc80_lrt6_feat1_name=tense
      verb-pc80_lrt6_feat1_value=aorist
      verb-pc80_lrt6_feat1_head=verb
      verb-pc80_lrt6_feat2_name=evidential
      verb-pc80_lrt6_feat2_value=reported
      verb-pc80_lrt6_feat2_head=verb
      verb-pc80_lrt6_lri1_inflecting=yes
      verb-pc80_lrt6_lri1_orth=-ino
    verb-pc80_lrt7_name=perfect_reported
      verb-pc80_lrt7_feat1_name=tense
      verb-pc80_lrt7_feat1_value=aorist
      verb-pc80_lrt7_feat1_head=verb
      verb-pc80_lrt7_feat2_name=aspect
      verb-pc80_lrt7_feat2_value=pfv
      verb-pc80_lrt7_feat2_head=verb
      verb-pc80_lrt7_feat3_name=evidential
      verb-pc80_lrt7_feat3_value=reported
      verb-pc80_lrt7_feat3_head=verb
      verb-pc80_lrt7_lri1_inflecting=yes
      verb-pc80_lrt7_lri1_orth=-nor
    verb-pc80_lrt8_name=present_uninfl
      verb-pc80_lrt8_feat1_name=tense
      verb-pc80_lrt8_feat1_value=present
      verb-pc80_lrt8_feat1_head=verb
      verb-pc80_lrt8_lri1_inflecting=no
  verb-pc81_name=perf_stems
  verb-pc81_order=suffix
  verb-pc81_inputs=verb191
    verb-pc81_lrt1_name=future
      verb-pc81_lrt1_feat1_name=tense
      verb-pc81_lrt1_feat1_value=future
      verb-pc81_lrt1_feat1_head=verb
      verb-pc81_lrt1_lri1_inflecting=yes
      verb-pc81_lrt1_lri1_orth=-ʷ
      verb-pc81_lrt1_lri2_inflecting=yes
      verb-pc81_lrt1_lri2_orth=-o
    verb-pc81_lrt2_name=future_ipf
      verb-pc81_lrt2_feat1_name=tense
      verb-pc81_lrt2_feat1_value=future
      verb-pc81_lrt2_feat1_head=verb
      verb-pc81_lrt2_feat2_name=aspect
      verb-pc81_lrt2_feat2_value=ipfv
      verb-pc81_lrt2_feat2_head=verb
      verb-pc81_lrt2_lri1_inflecting=yes
      verb-pc81_lrt2_lri1_orth=-or
      verb-pc81_lrt2_lri2_inflecting=yes
      verb-pc81_lrt2_lri2_orth=-ora
    verb-pc81_lrt3_name=future_ipf_reported
      verb-pc81_lrt3_feat1_name=tense
      verb-pc81_lrt3_feat1_value=future
      verb-pc81_lrt3_feat1_head=verb
      verb-pc81_lrt3_feat2_name=aspect
      verb-pc81_lrt3_feat2_value=ipfv
      verb-pc81_lrt3_feat2_head=verb
      verb-pc81_lrt3_feat3_name=evidential
      verb-pc81_lrt3_feat3_value=reported
      verb-pc81_lrt3_feat3_head=verb
      verb-pc81_lrt3_lri1_inflecting=yes
      verb-pc81_lrt3_lri1_orth=-ralʷ
    verb-pc81_lrt4_name=aor
      verb-pc81_lrt4_feat1_name=tense
      verb-pc81_lrt4_feat1_value=aorist
      verb-pc81_lrt4_feat1_head=verb
      verb-pc81_lrt4_lri1_inflecting=yes
      verb-pc81_lrt4_lri1_orth=-en
    verb-pc81_lrt5_name=aor_per
      verb-pc81_lrt5_feat1_name=tense
      verb-pc81_lrt5_feat1_value=aorist
      verb-pc81_lrt5_feat1_head=verb
      verb-pc81_lrt5_feat2_name=aspect
      verb-pc81_lrt5_feat2_value=pfv
      verb-pc81_lrt5_feat2_head=verb
      verb-pc81_lrt5_lri1_inflecting=yes
      verb-pc81_lrt5_lri1_orth=-er
    verb-pc81_lrt6_name=aor_rep
      verb-pc81_lrt6_feat1_name=tense
      verb-pc81_lrt6_feat1_value=aorist
      verb-pc81_lrt6_feat1_head=verb
      verb-pc81_lrt6_feat2_name=evidential
      verb-pc81_lrt6_feat2_value=reported
      verb-pc81_lrt6_feat2_head=verb
      verb-pc81_lrt6_lri1_inflecting=yes
      verb-pc81_lrt6_lri1_orth=-eno
    verb-pc81_lrt7_name=aor_per_rep
      verb-pc81_lrt7_feat1_name=tense
      verb-pc81_lrt7_feat1_value=aorist
      verb-pc81_lrt7_feat1_head=verb
      verb-pc81_lrt7_feat2_name=aspect
      verb-pc81_lrt7_feat2_value=pfv
      verb-pc81_lrt7_feat2_head=verb
      verb-pc81_lrt7_feat3_name=evidential
      verb-pc81_lrt7_feat3_value=reported
      verb-pc81_lrt7_feat3_head=verb
      verb-pc81_lrt7_lri1_inflecting=yes
      verb-pc81_lrt7_lri1_orth=-nor


We did not delete pre-exisiting position classes that added affixes with the same spelling, as we did not want to drastically reduce coverage of our
corpus and we have not yet added many verbs to our new verb category.

WH-questions:

A review of the literature for Tsova-Tush provded us with basic information regarding Matrix wh-questions.  The wh-words for core arguments vary based on animacy
and by case.  The following wh-question lexical items were located in our corpus:
	ħan "who-ergative"
	st'e "what-ergative"
	meⁿ "who-absolutive"
	vux "what-absolutive"
Our literature notes that the question words for 'what' trigger d/d agreement.  The question words for "who" trigger d/d agreement, though this can be overridden if the speaker knows the
gender of the referent for "who".

Tsova-Tush has free word order for declarative sentences.  For wh-questions, however, content question words must occur immediately before the "verbal complex" - per our literature,
this means that only negation and preverbs are allowed to intervene between the question word and the verb. No other distinctions were noted between wh-questions and declarative sentences.

Wh-questions in which the argument belongs to a lower clause require two copies of the question word, one before each of the finite verbs in the standard position that a wh-question appears,
as in the example below:
	vux ɣan d-ag-ir leven-en, vux d-av-d-ier daħ
	what dream CM-see-IMPF Levan-DAT what CM-lose-CM-IMPF away
	What did Levan dream that he lost?

We created the following test sentences:

Matrix wh questions: what abs
Source: b 2720
Vetted: s
Judgment: g
Phenomena: Matrix wh questions
vux tit'-er 
what(abs) cut_aorist-perfective 
What did (s/he) cut?

Matrix wh questions: who ergative
Source: b 2730
Vetted: s
Judgment: g
Phenomena: Matrix wh questions
ħan tit'-en xaxʷ 
who(ERG) cut_aorist-aorist onion 
Who cut the onion?

Matrix wh questions: who absolutive
Source: author
Vetted: f
Judgment: g
Phenomena: Matrix wh questions
meⁿ tit'-er 
who(abs) cut_aorist-perfective 
Who did (s/he) cut?

Matrix wh questions: what should be absolutive, is ergative
Source: author
Vetted: f
Judgment: u
Phenomena: Matrix wh questions
st'e tit'-er 
what(erg) cut_aorist-perfective 
What did (s/he) cut?

Matrix wh questions: who should be ergative, is absolutive
Source: author
Vetted: f
Judgment: u
Phenomena: Matrix wh questions
meⁿ tit'-en xaxʷ 
who(abs) cut_aorist-aorist onion 
Who cut the onion?

Matrix wh questions: word order should have question word precede the verb
Source: author
Vetted: f
Judgment: u
Phenomena: Matrix wh questions
tit'-er vux
cut_aorist-perfective what(abs)
What did (s/he) cut?

Our grammar did not have any choices entries for wh-questions, so we started with that section of the matrix page.
Based on our review of the literature and corpus, we provided the following information:

section=wh-q
front-matrix=in-situ
matrix-front-opt=none-oblig

We added two new noun categories to the lexicon, question_erg and question_abs, for the ergative and the absolutive case forms
of the question words, and specified the case feature for each type.  

  noun128_name=question_erg
  noun128_inter=on
    noun128_feat1_name=case
    noun128_feat1_value=erg
    noun128_feat2_name=gender
    noun128_feat2_value=dd
  noun128_det=opt
    noun128_stem1_orth=ħan
    noun128_stem1_pred=_who_n_rel
    noun128_stem2_orth=st'e
    noun128_stem2_pred=_what_n_rel
  noun129_name=question_abs
  noun129_inter=on
    noun129_feat1_name=case
    noun129_feat1_value=abs
    noun129_feat2_name=gender
    noun129_feat2_value=dd
  noun129_det=opt
    noun129_stem1_orth=vux
    noun129_stem1_pred=_what _n_rel
    noun129_stem2_orth=meⁿ
    noun129_stem2_pred=_who_n_rel

We attempted to use focus marking to enforce the word-order for the question words, but this did not prevent the parsing of ungrammatical sentences that had the wh-word appear in 
the incorrect position.

Test sentences we created with the incorrect case markings on the question words are parsing, but are parsing with the incorrect semantics. 

Embedded clauses:

Our literature states there are thirteen different semantic categories of verbs that take embedded clauses as arguments. In general, verbs which take embedded finite clauses are marked with d/d agreement 
(if they are verbs that take agreement marking), though there are some one-off unique cases.  

For simplicity, we chose to focus on two verbs that take embedded clauses: one from the propositional attitude semantic class, and one from the knowledge acquistion semantic class.  Neither verb
is one that takes an agreement marker.

The verb 'dak'lavar', 'think' is from the propositional attitude semantic class.   
The verb 'vuntxeʔ', 'dunno' is from the knowledge acquistion semantic class.  

There is no specific morphological marking on the verb to indicate its argument is an embedded clause.
There is no marking on the embedded clause.  Embedded clauses are not nominalized.

We did not see anything in our literature specifically defining the word order for a sentence containing an embedded clause, but every example we located in the corpus
and in Hauk's literature had SVO word order, with the embedded clause occurring after the verb.  As we were unable to determine if a different word order would be
ungrammatical, we chose to use the SVO word order for all our test sentences but not enforce word order for grammaticality judgments.

Embedded finite clauses in Tsova-Tush are introduced in one of three ways:
	1. The complementizer 'me'
	2. A content question word
	3. No complementizer

Our literature states that the complementizer 'me' is used most often for non-finite embedded clauses, but we found many examples in our corpus
that used 'me' to introduce finite embedded declarative clauses (in fact, our review of the corpus had more sentences introducing embedded finite clauses with the 
complementizer than without).  

There were fewer examples in our corpus of embedded interrogative clauses, but there were sentences included in Hauk showing that an embedded interrogative 
clause can occur with the complementizer 'me' in addition to a content question word, or simply occuring with the content question word. We were unbale to locate
sentences that met the testsuite requirements for embedded yes-no questions - there were many examples with content questions, but no sentences in the corpus with yes-no questions.

It was challenging to generate ungrammatical test sentences for embedded clauses, as they can occur with or without the complementizer and we did not want to enforece
any grammaticality judgments regarding word order as we were uncertain if there is any requirement.  It seems likely that the complementizer 'me' is required to occur directly
before the embedded clause (based on the distribution we saw in the corpus) but as we weren't sure we did not want to use this as a judgment for grammaticality.

We added the following testsuite sentences for embedded clauses:


Embedded clauses: declarative
Source: b 4200
Vetted: s
Judgment: g
Phenomena: embedded clauses
malo dak'lev me , ǰemo-n y-ec' 
Malo think COMP , Jemo-DAT CMd/jsg-love
Malo thinks that Jemo loves her. 

Embedded clauses: declarative
Source: author
Vetted: f
Judgment: g
Phenomena: embedded clauses
malo dak'lev ǰemo-n y-ec' 
Malo think Jemo-DAT CMd/jsg-love
Malo thinks Jemo loves her. 

Embedded clauses: declarative
Source: b 4210
Vetted: s
Judgment: g
Phenomena: embedded clauses
malo dak'lev me , ǰemo v-ec' 
Malo think COMP , Jemo CMd/bsg-love
Malo thinks that she loves Jemo. 

Embedded clauses: declarative
Source: author
Vetted: f
Judgment: g
Phenomena: embedded clauses
malo dak'lev ǰemo v-ec' 
Malo think Jemo CMd/bsg-love
Malo thinks she loves Jemo. 

Embedded clauses: interrogative
Source: Hauk 80
Vetted: s
Jugment: g
Phenomena: embedded clauses
oquin vuntxeʔ-er me vux ambui j-e-r
yon.one.DAT dunno-IMPF COMP what story CMjjsg-be-IMPF
He didn't know what happened

Question 4:
We added embedded clauses to the testsuite, but we have not worked on implementing them in the grammar.
We have not worked on modifying the demonstrative adjectives or coordination in the grammar, but we will need to address this soon.


